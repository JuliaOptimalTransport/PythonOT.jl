name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ (matrix.python && 'system Python') || 'conda' }}
    runs-on: ${{ matrix.os }}
    env:
      PYTHON: '' # always use Conda.jl, even on Linux when `python`/`python3` is in the PATH
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.0'
          - '1.6'
          - '1'
        os:
          - ubuntu-latest
          - macOS-latest
        arch:
          - x64
        include:
          - version: '1'
            os: ubuntu-latest
            arch: x64
            coverage: true
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - name: Install POT
        run: |
          using PyCall: Conda
          Conda.add("pot"; channel="conda-forge")
        shell: julia --project=. --color=yes {0}
      - uses: julia-actions/julia-runtest@v1
        with:
          coverage: ${{ matrix.coverage || false }}
        env:
          # Workaround for https://github.com/JuliaPy/PyCall.jl/issues/999: Use conda's version of the library
          LD_PRELOAD: '$HOME/.julia/conda/3/lib/libstdc++.so.6'
      - uses: julia-actions/julia-processcoverage@v1
        if: matrix.coverage
      - uses: codecov/codecov-action@v2
        if: matrix.coverage
        with:
          file: lcov.info
      - uses: coverallsapp/github-action@master
        if: matrix.coverage
        with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            path-to-lcov: ./lcov.info
