name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    env:
      PYTHON: '' # always use Conda.jl, even on Linux where `python`/`python3` is in the PATH
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.0'
          - '1.6'
          - '1'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
        exclude:
          # Conda installation fails: https://github.com/JuliaPy/Conda.jl/issues/230
          - version: '1.0'
            os: windows-latest
            arch: x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
        with:
          cache-packages: "false" # Weird interaction with PyCall settings?
      - uses: julia-actions/julia-buildpkg@v1
      - name: Install POT
        run: |
          using PyCall: Conda
          Conda.add("nomkl") # Work around https://github.com/JuliaPy/PyPlot.jl/issues/315
          Conda.add("pot"; channel="conda-forge")

          # Workaround for https://github.com/JuliaPy/PyCall.jl/issues/999: Use conda's version of the library
          if !Sys.iswindows()
            open(ENV["GITHUB_ENV"], "a") do io
              println(io, "LD_PRELOAD=", joinpath(Conda.ROOTENV, "lib", "libstdc++.so.6"))
            end
          end
        shell: julia --project=. --color=yes {0}
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v2
        with:
          files: lcov.info
      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./lcov.info
          flag-name: run-${{ matrix.version }}
          parallel: true
  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true
